#!/bin/bash
INSTALL_DIR="/mnt/server"
GATE_BIN_NAME="gate"
GATE_CONFIG_FILE="config.yml"

cd "${INSTALL_DIR}" || exit 1

echo "Downloading Gate Proxy..."

# Install jq if not present (jq is essential for robust JSON parsing)
if ! command -v jq &> /dev/null; then
    echo "jq not found. Attempting to install jq..."
    # Ensure apt is updated before trying to install jq
    apt update -y && apt install -y jq || { echo "Error: Failed to install jq. Please ensure the base container has package manager access."; exit 1; }
fi

if [ "${GATE_VERSION}" == "latest" ]; then
    # Use jq to robustly extract the download URL for the latest linux_amd64 asset
    GATE_RELEASE_URL=$(curl -s https://api.github.com/repos/GateProxy/Gate/releases/latest | jq -r '.assets[] | select(.name | contains("linux_amd64")) | .browser_download_url')
else
    # Use jq to robustly extract the download URL for a specific version's linux_amd64 asset
    GATE_RELEASE_URL=$(curl -s https://api.github.com/repos/GateProxy/Gate/releases/tags/${GATE_VERSION} | jq -r '.assets[] | select(.name | contains("linux_amd64")) | .browser_download_url')
fi

# Check if the URL was found
if [ -z "${GATE_RELEASE_URL}" ]; then
    echo "Error: Could not find download URL for Gate Proxy version ${GATE_VERSION}."
    echo "This might be due to GitHub API rate limits, or no 'linux_amd64' asset found for this version."
    exit 1
fi

echo "Found download URL: ${GATE_RELEASE_URL}"

# Download the Gate Proxy binary
wget -O gate.zip "${GATE_RELEASE_URL}"
if [ $? -ne 0 ]; then
    echo "Error: Failed to download Gate Proxy from ${GATE_RELEASE_URL}."
    exit 1
fi

# Unzip the downloaded file
unzip -o gate.zip
if [ $? -ne 0 ]; then
    echo "Error: Failed to unzip gate.zip. Ensure 'unzip' is installed."
    exit 1
fi

# Clean up the zip file
rm gate.zip

# Make the Gate Proxy binary executable
chmod +x "${GATE_BIN_NAME}"

echo "Generating base Gate configuration."
cat << EOF > "${GATE_CONFIG_FILE}"
listen: ":${SERVER_PORT}"
servers:
  default: "${DEFAULT_BACKEND}"
hosts:
  "play.yourdomain.com": "default"
  "default": "default"
onlineMode: true
proxyProtocol: none
logLevel: info
EOF

echo "Gate Proxy installation complete."
